package cmd

import (
	"fmt"
	"os"
	"strconv"
	"task/db"

	"github.com/spf13/cobra"
)

var doCmd = &cobra.Command{
	Use:   "do",
	Short: "Marks a task as complete.",
	Run: func(cmd *cobra.Command, args []string) {
		var ids []int

		// parsing user arguments to integers.
		for _, arg := range args {
			id,err := strconv.Atoi(arg)
			if err != nil {
				fmt.Println("Failed to parse the argument: ", arg)
			} else {
				ids = append(ids, id)
			}
		}

		// fetch all tasks 
			/* we will search for the tasks in db  because the keys automatically generated by the db are not automatically aligned with teh user keys.*/
		tasks, err := db.AllTasks()
		if err != nil {
			fmt.Println("Something went wrong:", err)
			os.Exit(1)
		}

		// iterate over the ids 
		for _, id := range ids {
			// validate each
			if id <= 0 || id > len(tasks) {
				fmt.Println("Invalid task number:", id)
				continue
			}
			// map the user id to DB key and delete.
			task := tasks[id-1]
			err := db.DeleteTask(task.Key)
			if err != nil {
				fmt.Printf("Failed to mark \"%d\" as completed. Error: %s\n", id, err)
			} else {
				fmt.Printf("Marked to mark \"%d\" as completed.\n", id)
			}
		}
	},
}

// init to be called before main runs; to use it later.
func init() {
	RootCmd.AddCommand(doCmd)
}
